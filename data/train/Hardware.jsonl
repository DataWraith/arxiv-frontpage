{"abstract": "Design space exploration (DSE) enables architects to systematically evaluate various design options, guiding decisions on the most suitable configurations to meet specific objectives such as optimizing performance, power, and area. However, the growing complexity of modern CPUs has dramatically increased the number of micro-architectural parameters and expanded the overall design space, making DSE more challenging and time-consuming. Existing DSE frameworks struggle in large-scale design spaces due to inaccurate models and limited insights into parameter impact, hindering efficient identification of optimal micro-architectures within tight timeframes.", "authors": ["Runzhen Xue", "Hao Wu", "Mingyu Yan", "Ziheng Xiao", "Xiaochun Ye", "Dongrui Fan"], "created": "2025-04-11", "title": "Multi-objective Optimization in CPU Design Space Exploration: Attention is All You Need", "url": "https://arxiv.org/abs/2410.18368"}
{"abstract": "Testing Electronic Design Automation (EDA) tools rely on benchmarks -- designs written in Hardware Description Languages (HDLs) such as Verilog, SystemVerilog, or VHDL. Although collections of benchmarks for these languages exist, they are typically limited in size. This scarcity has recently drawn more attention due to the increasing need for training large language models in this domain. To deal with such limitation, this paper presents a methodology and a corresponding tool for generating realistic Verilog designs. The tool, ChiGen, was originally developed to test the Jasper\\textregistered\\ Formal Verification Platform, a product by Cadence Design Systems. Now, released as open-source software, ChiGen has been able to identify zero-day bugs in a range of tools, including Verible, Verilator, and Yosys. This paper outlines the principles behind ChiGen's design, focusing on three aspects of it: (i) generation guided by probabilistic grammars, (ii) type inference via the Hindley-Milner algorithm, and (iii) code injection enabled by data-flow analysis. Once deployed on standard hardware, ChiGen outperforms existing Verilog Fuzzers such as Verismith, TransFuzz, and VlogHammer regarding structural diversity, code coverage, and bug-finding ability.", "authors": ["Jo\\~ao Victor Amorim Vieira", "Luiza de Melo Gomes", "Rafael Sumitani", "Raissa Maciel", "Augusto Mafra", "Mirlaine Crepalde", "Fernando Magno Quint\\~ao Pereira"], "created": "2025-04-11", "title": "Bottom-Up Generation of Verilog Designs for Testing EDA Tools", "url": "https://arxiv.org/abs/2504.06295"}
{"abstract": "Application performance of modern day processors is often limited by the memory subsystem rather than actual compute capabilities. Therefore, data throughput specifications play a key role in modeling application performance and determining possible bottlenecks. However, while peak instruction throughputs and bandwidths for local caches are often documented, the achievable throughput can also depend on the relation between memory access and compute instructions. In this paper, we present an Arm version of the well established x86-membench throughput benchmark, which we have adapted to support all current SIMD extensions of the Armv8 instruction set architecture. We describe aspects of the Armv8 ISA that need to be considered in the portable design of this benchmark. We use the benchmark to analyze the memory subsystem at a fine spatial granularity and to unveil microarchitectural details of three processors: Fujitsu A64FX, Ampere Altra and Cavium ThunderX2. Based on the resulting performance information, we show that instruction fetch and decoder widths become a potential bottleneck for cache-bandwidth-sensitive workloads due to the load-store concept of the Arm ISA.", "authors": ["Cyrill Burth", "Markus Velten", "Robert Sch\\\"one"], "created": "2025-04-11", "title": "Introducing the Arm-membench Throughput Benchmark", "url": "https://arxiv.org/abs/2504.06813"}
